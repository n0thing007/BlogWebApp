<%- include("partials/header.ejs") %>
<div class="container">
  <form action="/search" class="search" method="POST">
    <button type="submit" class="mx-3"><i class="fa fa-search"></i></button>
    <input type="text" placeholder="Search...." name="search">
  </form>
  <div class="mt-5 mb-5 d-flex justify-content-evenly">
    <form action="/add-blog" method="GET">
      <button class="btn btn-primary px-3" type="submit">Add</button>
    </form>
  </div>
  <% var date = new Date(); %>
  <% for (var i = 0; i < blogs.length; i += 2) { %>
    <div class="row mb-2 mx-4">
      <% for (var j = 0; j < 2; j++) {
          var index = i + j;
          if (index < blogs.length) { %> 
          <div class="col-md-6">
            <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
              <div class="col p-4 d-flex flex-column position-static">
                <strong class="d-inline-block mb-2 text-primary-emphasis"><%= blogs[index].field %></strong>
                <h3 class="mb-0"><%= blogs[index].title %></h3>
                <div class="mb-1 text-body-secondary"><%= date.toDateString() %></div>
                <p class="card-text mb-auto"><%= blogs[index].para %></p>
                <div class="card-bottom d-flex justify-content-between">
                  <a href="/edit-blog/<%= index %>" class="edit-button" data-index="<%= index %>">
                    <button class="btn btn-primary px-4">Edit</button>
                  </a>
                  <a href="/delete-blog/<%= index %>" class="delete-button" data-index="<%= index %>">
                    <button class="btn btn-danger">Delete</button>
                  </a>
                </div>
              </div>
              <div class="col-auto d-none d-lg-block">
                <% if (blogs[index].thumbnail) { %>
                  <img src="<%= blogs[index].thumbnail %>" alt="Thumbnail" width="200" height="250">
                <% } else { %>
                  <svg class="bd-placeholder-img" width="200" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false">
                    <title>Placeholder</title>
                    <rect width="100%" height="100%" fill="#55595c"></rect>
                    <text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text>
                  </svg>
                <% } %>
              </div>
            </div>
          </div>
        <% } %>
      <% } %>
    </div>
  <% } %>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function () {
    // Use event delegation to handle dynamically generated buttons
    $(document).on('click', '.delete-button', function (e) {
      e.preventDefault();
      var index = $(this).data('index');
      deleteBlog(index);
    });
  });

  function deleteBlog(index) {
    fetch(`/delete-blog/${index}`, {
      method: 'DELETE'
    }).then(response => {
      if (response.ok) {
        window.location.reload();
      } else {
        alert('Failed to delete blog');
      }
    });
  }
</script>

<%- include("partials/footer.ejs") %>
///////////////////////////////////////////////////////////////
import express from 'express';
import bodyParser from 'body-parser';
import multer from 'multer';
import path from 'path';

const app = express();
const port = 3000;
let blogs = [];

app.use(express.static('public'));
app.set('view engine', 'ejs');
app.use(bodyParser.urlencoded({ extended: true }));

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'public/uploads/')
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + path.extname(file.originalname)) // Append extension
  }
});

const upload = multer({ storage: storage });

app.get('/', (req, res) => {
  res.render('index', { blogs: blogs });
});

app.get('/add-blog', (req, res) => {
  res.render('add-blog');
});

app.post('/add-submit', upload.single('thumbnail'), (req, res) => {
  const data = {
    title: req.body.title,
    field: req.body.field,
    para: req.body.para,
    thumbnail: req.file ? `/uploads/${req.file.filename}` : null
  };
  blogs.push(data);
  res.redirect('/');
});


app.get('/edit-blog/:index', (req, res) => {
  const index = parseInt(req.params.index);
  if (index >= 0 && index < blogs.length) {
    const blog = blogs[index];
    res.render('edit-blog', { blog: blog, index: index });
  } else {
    res.status(400).send('Invalid index');
  }
});

app.post('/edit-submit/:index', upload.single('thumbnail'), (req, res) => {
  const index = parseInt(req.params.index);
  if (index >= 0 && index < blogs.length) {
    blogs[index] = {
      title: req.body.title,
      field: req.body.field,
      para: req.body.para,
      thumbnail: req.file ? `/uploads/${req.file.filename}` : blogs[index].thumbnail
    };
    res.redirect('/');
  } else {
    res.status(400).send('Invalid index');
  }
});

app.delete('/delete-blog/:index', (req, res) => {
  const index = parseInt(req.params.index);
  if (index >= 0 && index < blogs.length) {
    blogs.splice(index, 1);
    res.status(200).send();
  } else {
    res.status(400).send('Invalid index');
  }
});

app.listen(port, () => {
  console.log(`Server has started on port ${port}`);
});
